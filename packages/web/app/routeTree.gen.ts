/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SignoutImport } from './routes/signout'
import { Route as SigninImport } from './routes/signin'
import { Route as IndexImport } from './routes/index'
import { Route as jobsJobsImport } from './routes/(jobs)/jobs'
import { Route as infoInfoImport } from './routes/(info)/info'
import { Route as dashboardDashboardImport } from './routes/(dashboard)/dashboard'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as dashboardDashboardIndexImport } from './routes/(dashboard)/dashboard.index'
import { Route as jobsJobsFindImport } from './routes/(jobs)/jobs.find'
import { Route as jobsJobsJobsIdImport } from './routes/(jobs)/jobs.$jobsId'
import { Route as infoInfoWorkersImport } from './routes/(info)/info.workers'
import { Route as infoInfoEmpoyeersImport } from './routes/(info)/info.empoyeers'
import { Route as infoInfoAboutImport } from './routes/(info)/info.about'
import { Route as dashboardDashboardUsersImport } from './routes/(dashboard)/dashboard.users'
import { Route as dashboardDashboardTasksImport } from './routes/(dashboard)/dashboard.tasks'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SignoutRoute = SignoutImport.update({
  id: '/signout',
  path: '/signout',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const jobsJobsRoute = jobsJobsImport.update({
  id: '/(jobs)/jobs',
  path: '/jobs',
  getParentRoute: () => rootRoute,
} as any)

const infoInfoRoute = infoInfoImport.update({
  id: '/(info)/info',
  path: '/info',
  getParentRoute: () => rootRoute,
} as any)

const dashboardDashboardRoute = dashboardDashboardImport.update({
  id: '/(dashboard)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const dashboardDashboardIndexRoute = dashboardDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardDashboardRoute,
} as any)

const jobsJobsFindRoute = jobsJobsFindImport.update({
  id: '/find',
  path: '/find',
  getParentRoute: () => jobsJobsRoute,
} as any)

const jobsJobsJobsIdRoute = jobsJobsJobsIdImport.update({
  id: '/$jobsId',
  path: '/$jobsId',
  getParentRoute: () => jobsJobsRoute,
} as any)

const infoInfoWorkersRoute = infoInfoWorkersImport.update({
  id: '/workers',
  path: '/workers',
  getParentRoute: () => infoInfoRoute,
} as any)

const infoInfoEmpoyeersRoute = infoInfoEmpoyeersImport.update({
  id: '/empoyeers',
  path: '/empoyeers',
  getParentRoute: () => infoInfoRoute,
} as any)

const infoInfoAboutRoute = infoInfoAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => infoInfoRoute,
} as any)

const dashboardDashboardUsersRoute = dashboardDashboardUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => dashboardDashboardRoute,
} as any)

const dashboardDashboardTasksRoute = dashboardDashboardTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => dashboardDashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signout': {
      id: '/signout'
      path: '/signout'
      fullPath: '/signout'
      preLoaderRoute: typeof SignoutImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/dashboard': {
      id: '/(dashboard)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof dashboardDashboardImport
      parentRoute: typeof rootRoute
    }
    '/(info)/info': {
      id: '/(info)/info'
      path: '/info'
      fullPath: '/info'
      preLoaderRoute: typeof infoInfoImport
      parentRoute: typeof rootRoute
    }
    '/(jobs)/jobs': {
      id: '/(jobs)/jobs'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof jobsJobsImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/dashboard/tasks': {
      id: '/(dashboard)/dashboard/tasks'
      path: '/tasks'
      fullPath: '/dashboard/tasks'
      preLoaderRoute: typeof dashboardDashboardTasksImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/dashboard/users': {
      id: '/(dashboard)/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof dashboardDashboardUsersImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(info)/info/about': {
      id: '/(info)/info/about'
      path: '/about'
      fullPath: '/info/about'
      preLoaderRoute: typeof infoInfoAboutImport
      parentRoute: typeof infoInfoImport
    }
    '/(info)/info/empoyeers': {
      id: '/(info)/info/empoyeers'
      path: '/empoyeers'
      fullPath: '/info/empoyeers'
      preLoaderRoute: typeof infoInfoEmpoyeersImport
      parentRoute: typeof infoInfoImport
    }
    '/(info)/info/workers': {
      id: '/(info)/info/workers'
      path: '/workers'
      fullPath: '/info/workers'
      preLoaderRoute: typeof infoInfoWorkersImport
      parentRoute: typeof infoInfoImport
    }
    '/(jobs)/jobs/$jobsId': {
      id: '/(jobs)/jobs/$jobsId'
      path: '/$jobsId'
      fullPath: '/jobs/$jobsId'
      preLoaderRoute: typeof jobsJobsJobsIdImport
      parentRoute: typeof jobsJobsImport
    }
    '/(jobs)/jobs/find': {
      id: '/(jobs)/jobs/find'
      path: '/find'
      fullPath: '/jobs/find'
      preLoaderRoute: typeof jobsJobsFindImport
      parentRoute: typeof jobsJobsImport
    }
    '/(dashboard)/dashboard/': {
      id: '/(dashboard)/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof dashboardDashboardIndexImport
      parentRoute: typeof dashboardDashboardImport
    }
  }
}

// Create and export the route tree

interface dashboardDashboardRouteChildren {
  dashboardDashboardTasksRoute: typeof dashboardDashboardTasksRoute
  dashboardDashboardUsersRoute: typeof dashboardDashboardUsersRoute
  dashboardDashboardIndexRoute: typeof dashboardDashboardIndexRoute
}

const dashboardDashboardRouteChildren: dashboardDashboardRouteChildren = {
  dashboardDashboardTasksRoute: dashboardDashboardTasksRoute,
  dashboardDashboardUsersRoute: dashboardDashboardUsersRoute,
  dashboardDashboardIndexRoute: dashboardDashboardIndexRoute,
}

const dashboardDashboardRouteWithChildren =
  dashboardDashboardRoute._addFileChildren(dashboardDashboardRouteChildren)

interface infoInfoRouteChildren {
  infoInfoAboutRoute: typeof infoInfoAboutRoute
  infoInfoEmpoyeersRoute: typeof infoInfoEmpoyeersRoute
  infoInfoWorkersRoute: typeof infoInfoWorkersRoute
}

const infoInfoRouteChildren: infoInfoRouteChildren = {
  infoInfoAboutRoute: infoInfoAboutRoute,
  infoInfoEmpoyeersRoute: infoInfoEmpoyeersRoute,
  infoInfoWorkersRoute: infoInfoWorkersRoute,
}

const infoInfoRouteWithChildren = infoInfoRoute._addFileChildren(
  infoInfoRouteChildren,
)

interface jobsJobsRouteChildren {
  jobsJobsJobsIdRoute: typeof jobsJobsJobsIdRoute
  jobsJobsFindRoute: typeof jobsJobsFindRoute
}

const jobsJobsRouteChildren: jobsJobsRouteChildren = {
  jobsJobsJobsIdRoute: jobsJobsJobsIdRoute,
  jobsJobsFindRoute: jobsJobsFindRoute,
}

const jobsJobsRouteWithChildren = jobsJobsRoute._addFileChildren(
  jobsJobsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/signout': typeof SignoutRoute
  '/signup': typeof SignupRoute
  '/login': typeof authLoginRoute
  '/dashboard': typeof dashboardDashboardRouteWithChildren
  '/info': typeof infoInfoRouteWithChildren
  '/jobs': typeof jobsJobsRouteWithChildren
  '/dashboard/tasks': typeof dashboardDashboardTasksRoute
  '/dashboard/users': typeof dashboardDashboardUsersRoute
  '/info/about': typeof infoInfoAboutRoute
  '/info/empoyeers': typeof infoInfoEmpoyeersRoute
  '/info/workers': typeof infoInfoWorkersRoute
  '/jobs/$jobsId': typeof jobsJobsJobsIdRoute
  '/jobs/find': typeof jobsJobsFindRoute
  '/dashboard/': typeof dashboardDashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/signout': typeof SignoutRoute
  '/signup': typeof SignupRoute
  '/login': typeof authLoginRoute
  '/info': typeof infoInfoRouteWithChildren
  '/jobs': typeof jobsJobsRouteWithChildren
  '/dashboard/tasks': typeof dashboardDashboardTasksRoute
  '/dashboard/users': typeof dashboardDashboardUsersRoute
  '/info/about': typeof infoInfoAboutRoute
  '/info/empoyeers': typeof infoInfoEmpoyeersRoute
  '/info/workers': typeof infoInfoWorkersRoute
  '/jobs/$jobsId': typeof jobsJobsJobsIdRoute
  '/jobs/find': typeof jobsJobsFindRoute
  '/dashboard': typeof dashboardDashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/signout': typeof SignoutRoute
  '/signup': typeof SignupRoute
  '/(auth)/login': typeof authLoginRoute
  '/(dashboard)/dashboard': typeof dashboardDashboardRouteWithChildren
  '/(info)/info': typeof infoInfoRouteWithChildren
  '/(jobs)/jobs': typeof jobsJobsRouteWithChildren
  '/(dashboard)/dashboard/tasks': typeof dashboardDashboardTasksRoute
  '/(dashboard)/dashboard/users': typeof dashboardDashboardUsersRoute
  '/(info)/info/about': typeof infoInfoAboutRoute
  '/(info)/info/empoyeers': typeof infoInfoEmpoyeersRoute
  '/(info)/info/workers': typeof infoInfoWorkersRoute
  '/(jobs)/jobs/$jobsId': typeof jobsJobsJobsIdRoute
  '/(jobs)/jobs/find': typeof jobsJobsFindRoute
  '/(dashboard)/dashboard/': typeof dashboardDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/signout'
    | '/signup'
    | '/login'
    | '/dashboard'
    | '/info'
    | '/jobs'
    | '/dashboard/tasks'
    | '/dashboard/users'
    | '/info/about'
    | '/info/empoyeers'
    | '/info/workers'
    | '/jobs/$jobsId'
    | '/jobs/find'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/signout'
    | '/signup'
    | '/login'
    | '/info'
    | '/jobs'
    | '/dashboard/tasks'
    | '/dashboard/users'
    | '/info/about'
    | '/info/empoyeers'
    | '/info/workers'
    | '/jobs/$jobsId'
    | '/jobs/find'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/signin'
    | '/signout'
    | '/signup'
    | '/(auth)/login'
    | '/(dashboard)/dashboard'
    | '/(info)/info'
    | '/(jobs)/jobs'
    | '/(dashboard)/dashboard/tasks'
    | '/(dashboard)/dashboard/users'
    | '/(info)/info/about'
    | '/(info)/info/empoyeers'
    | '/(info)/info/workers'
    | '/(jobs)/jobs/$jobsId'
    | '/(jobs)/jobs/find'
    | '/(dashboard)/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SigninRoute: typeof SigninRoute
  SignoutRoute: typeof SignoutRoute
  SignupRoute: typeof SignupRoute
  authLoginRoute: typeof authLoginRoute
  dashboardDashboardRoute: typeof dashboardDashboardRouteWithChildren
  infoInfoRoute: typeof infoInfoRouteWithChildren
  jobsJobsRoute: typeof jobsJobsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SigninRoute: SigninRoute,
  SignoutRoute: SignoutRoute,
  SignupRoute: SignupRoute,
  authLoginRoute: authLoginRoute,
  dashboardDashboardRoute: dashboardDashboardRouteWithChildren,
  infoInfoRoute: infoInfoRouteWithChildren,
  jobsJobsRoute: jobsJobsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/signin",
        "/signout",
        "/signup",
        "/(auth)/login",
        "/(dashboard)/dashboard",
        "/(info)/info",
        "/(jobs)/jobs"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signout": {
      "filePath": "signout.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(dashboard)/dashboard": {
      "filePath": "(dashboard)/dashboard.tsx",
      "children": [
        "/(dashboard)/dashboard/tasks",
        "/(dashboard)/dashboard/users",
        "/(dashboard)/dashboard/"
      ]
    },
    "/(info)/info": {
      "filePath": "(info)/info.tsx",
      "children": [
        "/(info)/info/about",
        "/(info)/info/empoyeers",
        "/(info)/info/workers"
      ]
    },
    "/(jobs)/jobs": {
      "filePath": "(jobs)/jobs.tsx",
      "children": [
        "/(jobs)/jobs/$jobsId",
        "/(jobs)/jobs/find"
      ]
    },
    "/(dashboard)/dashboard/tasks": {
      "filePath": "(dashboard)/dashboard.tasks.tsx",
      "parent": "/(dashboard)/dashboard"
    },
    "/(dashboard)/dashboard/users": {
      "filePath": "(dashboard)/dashboard.users.tsx",
      "parent": "/(dashboard)/dashboard"
    },
    "/(info)/info/about": {
      "filePath": "(info)/info.about.tsx",
      "parent": "/(info)/info"
    },
    "/(info)/info/empoyeers": {
      "filePath": "(info)/info.empoyeers.tsx",
      "parent": "/(info)/info"
    },
    "/(info)/info/workers": {
      "filePath": "(info)/info.workers.tsx",
      "parent": "/(info)/info"
    },
    "/(jobs)/jobs/$jobsId": {
      "filePath": "(jobs)/jobs.$jobsId.tsx",
      "parent": "/(jobs)/jobs"
    },
    "/(jobs)/jobs/find": {
      "filePath": "(jobs)/jobs.find.tsx",
      "parent": "/(jobs)/jobs"
    },
    "/(dashboard)/dashboard/": {
      "filePath": "(dashboard)/dashboard.index.tsx",
      "parent": "/(dashboard)/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
